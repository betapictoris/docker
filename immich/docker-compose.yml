version: "3.8"

services:
  immich-server:
    container_name: immich_server
    image: ghcr.io/immich-app/immich-server:release
    restart: always
    entrypoint: ["/bin/sh", "./start-server.sh"]

    volumes:
      - ${UPLOAD_LOCATION}:/usr/src/app/upload

    env_file:
      - .env

    depends_on:
      - redis
      - database
      - typesense

  immich-microservices:
    container_name: immich_microservices
    image: ghcr.io/immich-app/immich-server:release
    restart: always
    entrypoint: ["/bin/sh", "./start-microservices.sh"]

    volumes:
      - ${UPLOAD_LOCATION}:/usr/src/app/upload

    env_file:
      - .env

    depends_on:
      - redis
      - database
      - typesense

  immich-machine-learning:
    container_name: immich_machine_learning
    image: ghcr.io/immich-app/immich-machine-learning:release
    restart: always

    volumes:
      - ${UPLOAD_LOCATION}:/usr/src/app/upload
      - model-cache:/cache

    env_file:
      - .env

  immich-web:
    container_name: immich_web
    image: ghcr.io/immich-app/immich-web:release
    restart: always
    entrypoint: ["/bin/sh", "./entrypoint.sh"]

    env_file:
      - .env

  typesense:
    container_name: immich_typesense
    image: typesense/typesense:0.24.0
    restart: always

    volumes:
      - tsdata:/data

    environment:
      - TYPESENSE_API_KEY=${TYPESENSE_API_KEY}
      - TYPESENSE_DATA_DIR=/data

    logging:
      driver: none

  redis:
    container_name: immich_redis
    image: redis:6.2
    restart: always

  database:
    container_name: immich_postgres
    image: postgres:14
    restart: always

    volumes:
      - pgdata:/var/lib/postgresql/data

    env_file:
      - .env
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
      PG_DATA: /var/lib/postgresql/data

  immich-proxy:
    container_name: immich_proxy
    image: ghcr.io/immich-app/immich-proxy:release
    restart: always

    environment:
      # Make sure these values get passed through from the env file
      - IMMICH_SERVER_URL
      - IMMICH_WEB_URL

    logging:
      driver: none
    depends_on:
      - immich-server

    ports:
      - 8901:8080
    labels:
      - traefik.http.routers.immich.rule=Host(`immich.space.localhost`)
      - traefik.http.routers.immich.service=immich
      - traefik.http.services.immich.loadbalancer.server.port=8096
      - flame.type=app
      - flame.name=Immich
      - flame.url=http://immich.space.localhost
      - flame.icon=image-album

volumes:
  pgdata:
  model-cache:
  tsdata:
